package com.matias.features.ui.mainimport android.animation.ObjectAnimatorimport android.graphics.Colorimport android.os.Bundleimport android.view.Menuimport android.view.MenuItemimport android.view.WindowManagerimport androidx.core.view.GravityCompatimport androidx.drawerlayout.widget.DrawerLayoutimport androidx.vectordrawable.graphics.drawable.ArgbEvaluatorimport com.google.android.material.navigation.NavigationViewimport com.matias.components.tablayout.maintabview.SatylingMainTabItemUiModelimport com.matias.core.base.mvp.BasePresenterActivityimport com.matias.features.Rimport com.matias.features.di.main.MainActivityModuleimport com.matias.features.di.main.MainActivitySubcomponentimport com.matias.features.ui.MainUiComponentimport kotlinx.android.synthetic.main.content_main.*class MainActivity : BasePresenterActivity<MainActivity, MainActivityPresenter, MainActivitySubcomponent>(),	MainActivityContract.View, NavigationView.OnNavigationItemSelectedListener {	override fun bindComponent(): MainActivitySubcomponent =		MainUiComponent.component.plus(MainActivityModule())	override fun bindLayout(): Int =		R.layout.activity_main	override fun onCreate(savedInstanceState: Bundle?) {		super.onCreate(savedInstanceState)		setContentView(R.layout.activity_main)//		setSupportActionBar(toolbar)		val drawerLayout: DrawerLayout = findViewById(R.id.drawer_layout)		val navView: NavigationView = findViewById(R.id.nav_view)//		val toggle = ActionBarDrawerToggle(//			this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close)//		drawerLayout.addDrawerListener(toggle)//		toggle.syncState()		navView.setNavigationItemSelectedListener(this)		setupPager()//		setupTabLayout()	}	/**	 * Setup the pager that will contain all the main fragments.	 */	private fun setupPager() {		pager.adapter = MainPagerAdapter(supportFragmentManager, 0)	}	/**	 * Setup the main tab layout.	 */	private fun setupTabLayout() {//		stylingTabLayout.apply {//			addOnTabSelectedListener(object : TabLayout.OnTabSelectedListener {//				override fun onTabReselected(tab: TabLayout.Tab?) {}////				override fun onTabUnselected(tab: TabLayout.Tab?) {}////				override fun onTabSelected(tab: TabLayout.Tab?) {//					tab?.let {//						changeStatusBarColor(ContextCompat.getColor(this@MainActivity, getTabList()[tab.position].colorPrimary!!))//					}//				}//			})////			setup(pager, true, getTabList(), true)//		}	}	/**	 * Returns a list of [SatylingMainTabItemUiModel] to populate main tab layout.	 */	private fun getTabList(): List<SatylingMainTabItemUiModel> {		val tabItemList: ArrayList<SatylingMainTabItemUiModel> = ArrayList()//		tabItemList.add(SatylingMainTabItemUiModel(null, R.color.abcde, "Label1", R.drawable.ic_tab_main_32))//		tabItemList.add(SatylingMainTabItemUiModel(null, R.color.fghij, "Label2", R.drawable.ic_tab_products_32))//		tabItemList.add(SatylingMainTabItemUiModel(null, R.color.klmno, "Label3", R.drawable.ic_tab_contact_32))//		tabItemList.add(SatylingMainTabItemUiModel(null, R.color.pqrst, "Label4", R.drawable.ic_tab_profile_32))//		return tabItemList	}	override fun onCreateOptionsMenu(menu: Menu): Boolean {		// Inflate the menu; this adds items to the action bar if it is present.		menuInflater.inflate(R.menu.main, menu)		return true	}	override fun onOptionsItemSelected(item: MenuItem): Boolean {		// Handle action bar item clicks here. The action bar will		// automatically handle clicks on the Home/Up button, so long		// as you specify a parent activity in AndroidManifest.xml.		return when (item.itemId) {			R.id.action_settings -> true			else -> super.onOptionsItemSelected(item)		}	}	override fun onNavigationItemSelected(item: MenuItem): Boolean {		// Handle navigation view item clicks here.		when (item.itemId) {			R.id.nav_home -> {				// Handle the camera action			}			R.id.nav_gallery -> {			}			R.id.nav_slideshow -> {			}			R.id.nav_tools -> {			}			R.id.nav_share -> {			}			R.id.nav_send -> {			}		}		val drawerLayout: DrawerLayout = findViewById(R.id.drawer_layout)		drawerLayout.closeDrawer(GravityCompat.START)		return true	}	override fun onBackPressed() {		val drawerLayout: DrawerLayout = findViewById(R.id.drawer_layout)		if (drawerLayout.isDrawerOpen(GravityCompat.START)) {			drawerLayout.closeDrawer(GravityCompat.START)		} else {			super.onBackPressed()		}	}	/*******************************************************************************************************************	 * [MainActivityContract.View] implementation	 */	override fun changeStatusBarColor(toColor: Int) {		ObjectAnimator.ofObject(window, "statusBarColor", ArgbEvaluator(), window.statusBarColor, toColor).apply {			duration = 400			start()		}	}}