package com.matias.features.di.mainimport androidx.appcompat.app.AppCompatActivityimport androidx.fragment.app.FragmentManagerimport com.matias.domain.provider.mainposition.MainPositionProviderimport com.matias.domain.usecases.globalconfig.GetFeatureEnableUseCaseimport com.matias.domain.usecases.mainposition.*import com.matias.features.ui.main.MainScreenAnimatorimport com.matias.features.ui.main.MainScreenAnimatorImplimport com.matias.features.ui.main.activity.MainActivityimport com.matias.features.ui.main.activity.MainActivityPresenterimport com.matias.features.ui.main.adapters.CategoryRecyclerAdapterimport com.matias.features.ui.main.adapters.NewProductRecyclerAdapterimport com.matias.features.ui.main.adapters.OfferProductRecyclerAdapterimport com.matias.features.ui.main.adapters.ServiceRecyclerAdapterimport com.matias.features.ui.main.fragments.home.novelty.NoveltyPagerAdapterimport dagger.Moduleimport dagger.Provides/** * Dagger Module * * @see [MainActivity] client * @see [MainActivitySubcomponent] component */@Moduleclass MainActivityModule(private val activity: AppCompatActivity) {	@Provides	fun provideFragmentManager(): FragmentManager =		activity.supportFragmentManager	@Provides	fun provideMainActivityPresenter(		getFeatureEnableUseCase: GetFeatureEnableUseCase,		fetchMainPositionUseCase: FetchMainPositionUseCase,		getNoveltyListUseCase: GetNoveltyListUseCase,		getNewProductListUseCase: GetNewProductListUseCase,		getOfferProductListUseCase: GetOfferProductListUseCase,		getAnnouncementUseCase: GetAnnouncementUseCase	): MainActivityPresenter =		MainActivityPresenter(getFeatureEnableUseCase, fetchMainPositionUseCase, getNoveltyListUseCase, getNewProductListUseCase, getOfferProductListUseCase, getAnnouncementUseCase)	@Provides	fun provideGetNoveltyListUseCase(		mainPositionProvider: MainPositionProvider	): GetNoveltyListUseCase =		GetNoveltyListUseCase(mainPositionProvider)	@Provides	fun provideGetProductOfferListUseCase(		mainPositionProvider: MainPositionProvider	): GetOfferProductListUseCase =		GetOfferProductListUseCase(mainPositionProvider)	@Provides	fun provideGetNewProductListUseCase(		mainPositionProvider: MainPositionProvider	): GetNewProductListUseCase =		GetNewProductListUseCase(mainPositionProvider)	@Provides	fun provideGetMainPositionUseCase(mainPositionProvider: MainPositionProvider): FetchMainPositionUseCase =		FetchMainPositionUseCase(mainPositionProvider)	@Provides	fun provideGetAnnouncementUseCase(mainPositionProvider: MainPositionProvider): GetAnnouncementUseCase =		GetAnnouncementUseCase(mainPositionProvider)	@Provides	fun providCategoryRecyclerAdapter(): CategoryRecyclerAdapter =		CategoryRecyclerAdapter(activity)	@Provides	fun provideNoveltyPagerAdapter(fragmentManager: FragmentManager): NoveltyPagerAdapter =		NoveltyPagerAdapter(fragmentManager)	@Provides	fun provideNewProductRecyclerAdapter(): NewProductRecyclerAdapter =		NewProductRecyclerAdapter(activity)	@Provides	fun provideOffersRecyclerAdapter(): OfferProductRecyclerAdapter =		OfferProductRecyclerAdapter(activity)	@Provides	fun provideServiceRecyclerAdapter(): ServiceRecyclerAdapter =		ServiceRecyclerAdapter(activity)	@Provides	fun provideMainScreenAnimator(): MainScreenAnimator =		MainScreenAnimatorImpl()}